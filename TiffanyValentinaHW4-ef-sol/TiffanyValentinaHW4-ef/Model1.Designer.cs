//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NodeOrders500Model1", "FK_Orders_CDTable", "CDTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TiffanyValentinaHW4_ef.CDTable), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TiffanyValentinaHW4_ef.Order), true)]
[assembly: EdmRelationshipAttribute("NodeOrders500Model1", "FK_Orders_SalesPersonTable", "SalesPersonTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TiffanyValentinaHW4_ef.SalesPersonTable), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TiffanyValentinaHW4_ef.Order), true)]
[assembly: EdmRelationshipAttribute("NodeOrders500Model1", "FK_Orders_StoreTable", "StoreTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TiffanyValentinaHW4_ef.StoreTable), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TiffanyValentinaHW4_ef.Order), true)]
[assembly: EdmRelationshipAttribute("NodeOrders500Model1", "FK_SalesPersonTable_StoreTable", "StoreTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TiffanyValentinaHW4_ef.StoreTable), "SalesPersonTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TiffanyValentinaHW4_ef.SalesPersonTable), true)]

#endregion

namespace TiffanyValentinaHW4_ef
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NodeOrders500Entities7 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NodeOrders500Entities7 object using the connection string found in the 'NodeOrders500Entities7' section of the application configuration file.
        /// </summary>
        public NodeOrders500Entities7() : base("name=NodeOrders500Entities7", "NodeOrders500Entities7")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NodeOrders500Entities7 object.
        /// </summary>
        public NodeOrders500Entities7(string connectionString) : base(connectionString, "NodeOrders500Entities7")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NodeOrders500Entities7 object.
        /// </summary>
        public NodeOrders500Entities7(EntityConnection connection) : base(connection, "NodeOrders500Entities7")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CDTable> CDTables
        {
            get
            {
                if ((_CDTables == null))
                {
                    _CDTables = base.CreateObjectSet<CDTable>("CDTables");
                }
                return _CDTables;
            }
        }
        private ObjectSet<CDTable> _CDTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesPersonTable> SalesPersonTables
        {
            get
            {
                if ((_SalesPersonTables == null))
                {
                    _SalesPersonTables = base.CreateObjectSet<SalesPersonTable>("SalesPersonTables");
                }
                return _SalesPersonTables;
            }
        }
        private ObjectSet<SalesPersonTable> _SalesPersonTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoreTable> StoreTables
        {
            get
            {
                if ((_StoreTables == null))
                {
                    _StoreTables = base.CreateObjectSet<StoreTable>("StoreTables");
                }
                return _StoreTables;
            }
        }
        private ObjectSet<StoreTable> _StoreTables;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CDTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCDTables(CDTable cDTable)
        {
            base.AddObject("CDTables", cDTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesPersonTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesPersonTables(SalesPersonTable salesPersonTable)
        {
            base.AddObject("SalesPersonTables", salesPersonTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoreTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoreTables(StoreTable storeTable)
        {
            base.AddObject("StoreTables", storeTable);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NodeOrders500Model1", Name="CDTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CDTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CDTable object.
        /// </summary>
        /// <param name="cdID">Initial value of the cdID property.</param>
        /// <param name="cDname">Initial value of the CDname property.</param>
        /// <param name="artist">Initial value of the Artist property.</param>
        /// <param name="recordCompany">Initial value of the RecordCompany property.</param>
        /// <param name="yearReleased">Initial value of the YearReleased property.</param>
        /// <param name="listPrice">Initial value of the ListPrice property.</param>
        public static CDTable CreateCDTable(global::System.Int32 cdID, global::System.String cDname, global::System.String artist, global::System.String recordCompany, global::System.Int32 yearReleased, global::System.Decimal listPrice)
        {
            CDTable cDTable = new CDTable();
            cDTable.cdID = cdID;
            cDTable.CDname = cDname;
            cDTable.Artist = artist;
            cDTable.RecordCompany = recordCompany;
            cDTable.YearReleased = yearReleased;
            cDTable.ListPrice = listPrice;
            return cDTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cdID
        {
            get
            {
                return _cdID;
            }
            set
            {
                if (_cdID != value)
                {
                    OncdIDChanging(value);
                    ReportPropertyChanging("cdID");
                    _cdID = StructuralObject.SetValidValue(value, "cdID");
                    ReportPropertyChanged("cdID");
                    OncdIDChanged();
                }
            }
        }
        private global::System.Int32 _cdID;
        partial void OncdIDChanging(global::System.Int32 value);
        partial void OncdIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CDname
        {
            get
            {
                return _CDname;
            }
            set
            {
                OnCDnameChanging(value);
                ReportPropertyChanging("CDname");
                _CDname = StructuralObject.SetValidValue(value, false, "CDname");
                ReportPropertyChanged("CDname");
                OnCDnameChanged();
            }
        }
        private global::System.String _CDname;
        partial void OnCDnameChanging(global::System.String value);
        partial void OnCDnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, false, "Artist");
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RecordCompany
        {
            get
            {
                return _RecordCompany;
            }
            set
            {
                OnRecordCompanyChanging(value);
                ReportPropertyChanging("RecordCompany");
                _RecordCompany = StructuralObject.SetValidValue(value, false, "RecordCompany");
                ReportPropertyChanged("RecordCompany");
                OnRecordCompanyChanged();
            }
        }
        private global::System.String _RecordCompany;
        partial void OnRecordCompanyChanging(global::System.String value);
        partial void OnRecordCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearReleased
        {
            get
            {
                return _YearReleased;
            }
            set
            {
                OnYearReleasedChanging(value);
                ReportPropertyChanging("YearReleased");
                _YearReleased = StructuralObject.SetValidValue(value, "YearReleased");
                ReportPropertyChanged("YearReleased");
                OnYearReleasedChanged();
            }
        }
        private global::System.Int32 _YearReleased;
        partial void OnYearReleasedChanging(global::System.Int32 value);
        partial void OnYearReleasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ListPrice
        {
            get
            {
                return _ListPrice;
            }
            set
            {
                OnListPriceChanging(value);
                ReportPropertyChanging("ListPrice");
                _ListPrice = StructuralObject.SetValidValue(value, "ListPrice");
                ReportPropertyChanged("ListPrice");
                OnListPriceChanged();
            }
        }
        private global::System.Decimal _ListPrice;
        partial void OnListPriceChanging(global::System.Decimal value);
        partial void OnListPriceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NodeOrders500Model1", "FK_Orders_CDTable", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("NodeOrders500Model1.FK_Orders_CDTable", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("NodeOrders500Model1.FK_Orders_CDTable", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NodeOrders500Model1", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="ordersID">Initial value of the ordersID property.</param>
        /// <param name="storeID">Initial value of the storeID property.</param>
        /// <param name="salesPersonID">Initial value of the salesPersonID property.</param>
        /// <param name="cdID">Initial value of the cdID property.</param>
        /// <param name="pricePaid">Initial value of the pricePaid property.</param>
        /// <param name="dayPurch">Initial value of the dayPurch property.</param>
        /// <param name="hourPurch">Initial value of the hourPurch property.</param>
        public static Order CreateOrder(global::System.Int32 ordersID, global::System.Int32 storeID, global::System.Int32 salesPersonID, global::System.Int32 cdID, global::System.Int32 pricePaid, global::System.Int32 dayPurch, global::System.Int32 hourPurch)
        {
            Order order = new Order();
            order.ordersID = ordersID;
            order.storeID = storeID;
            order.salesPersonID = salesPersonID;
            order.cdID = cdID;
            order.pricePaid = pricePaid;
            order.dayPurch = dayPurch;
            order.hourPurch = hourPurch;
            return order;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ordersID
        {
            get
            {
                return _ordersID;
            }
            set
            {
                if (_ordersID != value)
                {
                    OnordersIDChanging(value);
                    ReportPropertyChanging("ordersID");
                    _ordersID = StructuralObject.SetValidValue(value, "ordersID");
                    ReportPropertyChanged("ordersID");
                    OnordersIDChanged();
                }
            }
        }
        private global::System.Int32 _ordersID;
        partial void OnordersIDChanging(global::System.Int32 value);
        partial void OnordersIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 storeID
        {
            get
            {
                return _storeID;
            }
            set
            {
                OnstoreIDChanging(value);
                ReportPropertyChanging("storeID");
                _storeID = StructuralObject.SetValidValue(value, "storeID");
                ReportPropertyChanged("storeID");
                OnstoreIDChanged();
            }
        }
        private global::System.Int32 _storeID;
        partial void OnstoreIDChanging(global::System.Int32 value);
        partial void OnstoreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 salesPersonID
        {
            get
            {
                return _salesPersonID;
            }
            set
            {
                OnsalesPersonIDChanging(value);
                ReportPropertyChanging("salesPersonID");
                _salesPersonID = StructuralObject.SetValidValue(value, "salesPersonID");
                ReportPropertyChanged("salesPersonID");
                OnsalesPersonIDChanged();
            }
        }
        private global::System.Int32 _salesPersonID;
        partial void OnsalesPersonIDChanging(global::System.Int32 value);
        partial void OnsalesPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cdID
        {
            get
            {
                return _cdID;
            }
            set
            {
                OncdIDChanging(value);
                ReportPropertyChanging("cdID");
                _cdID = StructuralObject.SetValidValue(value, "cdID");
                ReportPropertyChanged("cdID");
                OncdIDChanged();
            }
        }
        private global::System.Int32 _cdID;
        partial void OncdIDChanging(global::System.Int32 value);
        partial void OncdIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pricePaid
        {
            get
            {
                return _pricePaid;
            }
            set
            {
                OnpricePaidChanging(value);
                ReportPropertyChanging("pricePaid");
                _pricePaid = StructuralObject.SetValidValue(value, "pricePaid");
                ReportPropertyChanged("pricePaid");
                OnpricePaidChanged();
            }
        }
        private global::System.Int32 _pricePaid;
        partial void OnpricePaidChanging(global::System.Int32 value);
        partial void OnpricePaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dayPurch
        {
            get
            {
                return _dayPurch;
            }
            set
            {
                OndayPurchChanging(value);
                ReportPropertyChanging("dayPurch");
                _dayPurch = StructuralObject.SetValidValue(value, "dayPurch");
                ReportPropertyChanged("dayPurch");
                OndayPurchChanged();
            }
        }
        private global::System.Int32 _dayPurch;
        partial void OndayPurchChanging(global::System.Int32 value);
        partial void OndayPurchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 hourPurch
        {
            get
            {
                return _hourPurch;
            }
            set
            {
                OnhourPurchChanging(value);
                ReportPropertyChanging("hourPurch");
                _hourPurch = StructuralObject.SetValidValue(value, "hourPurch");
                ReportPropertyChanged("hourPurch");
                OnhourPurchChanged();
            }
        }
        private global::System.Int32 _hourPurch;
        partial void OnhourPurchChanging(global::System.Int32 value);
        partial void OnhourPurchChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NodeOrders500Model1", "FK_Orders_CDTable", "CDTable")]
        public CDTable CDTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CDTable>("NodeOrders500Model1.FK_Orders_CDTable", "CDTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CDTable>("NodeOrders500Model1.FK_Orders_CDTable", "CDTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CDTable> CDTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CDTable>("NodeOrders500Model1.FK_Orders_CDTable", "CDTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CDTable>("NodeOrders500Model1.FK_Orders_CDTable", "CDTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NodeOrders500Model1", "FK_Orders_SalesPersonTable", "SalesPersonTable")]
        public SalesPersonTable SalesPersonTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesPersonTable>("NodeOrders500Model1.FK_Orders_SalesPersonTable", "SalesPersonTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesPersonTable>("NodeOrders500Model1.FK_Orders_SalesPersonTable", "SalesPersonTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesPersonTable> SalesPersonTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesPersonTable>("NodeOrders500Model1.FK_Orders_SalesPersonTable", "SalesPersonTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesPersonTable>("NodeOrders500Model1.FK_Orders_SalesPersonTable", "SalesPersonTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NodeOrders500Model1", "FK_Orders_StoreTable", "StoreTable")]
        public StoreTable StoreTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreTable>("NodeOrders500Model1.FK_Orders_StoreTable", "StoreTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreTable>("NodeOrders500Model1.FK_Orders_StoreTable", "StoreTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StoreTable> StoreTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreTable>("NodeOrders500Model1.FK_Orders_StoreTable", "StoreTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StoreTable>("NodeOrders500Model1.FK_Orders_StoreTable", "StoreTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NodeOrders500Model1", Name="SalesPersonTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesPersonTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesPersonTable object.
        /// </summary>
        /// <param name="salesPersonID">Initial value of the salesPersonID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        /// <param name="storeID">Initial value of the storeID property.</param>
        public static SalesPersonTable CreateSalesPersonTable(global::System.Int32 salesPersonID, global::System.String firstName, global::System.String lastName, global::System.Int32 age, global::System.Int32 storeID)
        {
            SalesPersonTable salesPersonTable = new SalesPersonTable();
            salesPersonTable.salesPersonID = salesPersonID;
            salesPersonTable.FirstName = firstName;
            salesPersonTable.LastName = lastName;
            salesPersonTable.Age = age;
            salesPersonTable.storeID = storeID;
            return salesPersonTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 salesPersonID
        {
            get
            {
                return _salesPersonID;
            }
            set
            {
                if (_salesPersonID != value)
                {
                    OnsalesPersonIDChanging(value);
                    ReportPropertyChanging("salesPersonID");
                    _salesPersonID = StructuralObject.SetValidValue(value, "salesPersonID");
                    ReportPropertyChanged("salesPersonID");
                    OnsalesPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _salesPersonID;
        partial void OnsalesPersonIDChanging(global::System.Int32 value);
        partial void OnsalesPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int32 _Age;
        partial void OnAgeChanging(global::System.Int32 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 storeID
        {
            get
            {
                return _storeID;
            }
            set
            {
                OnstoreIDChanging(value);
                ReportPropertyChanging("storeID");
                _storeID = StructuralObject.SetValidValue(value, "storeID");
                ReportPropertyChanged("storeID");
                OnstoreIDChanged();
            }
        }
        private global::System.Int32 _storeID;
        partial void OnstoreIDChanging(global::System.Int32 value);
        partial void OnstoreIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NodeOrders500Model1", "FK_Orders_SalesPersonTable", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("NodeOrders500Model1.FK_Orders_SalesPersonTable", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("NodeOrders500Model1.FK_Orders_SalesPersonTable", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NodeOrders500Model1", "FK_SalesPersonTable_StoreTable", "StoreTable")]
        public StoreTable StoreTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreTable>("NodeOrders500Model1.FK_SalesPersonTable_StoreTable", "StoreTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreTable>("NodeOrders500Model1.FK_SalesPersonTable_StoreTable", "StoreTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StoreTable> StoreTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreTable>("NodeOrders500Model1.FK_SalesPersonTable_StoreTable", "StoreTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StoreTable>("NodeOrders500Model1.FK_SalesPersonTable_StoreTable", "StoreTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NodeOrders500Model1", Name="StoreTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoreTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoreTable object.
        /// </summary>
        /// <param name="storeID">Initial value of the storeID property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="numberEmployees">Initial value of the NumberEmployees property.</param>
        public static StoreTable CreateStoreTable(global::System.Int32 storeID, global::System.String city, global::System.String state, global::System.Int32 numberEmployees)
        {
            StoreTable storeTable = new StoreTable();
            storeTable.storeID = storeID;
            storeTable.City = city;
            storeTable.State = state;
            storeTable.NumberEmployees = numberEmployees;
            return storeTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 storeID
        {
            get
            {
                return _storeID;
            }
            set
            {
                if (_storeID != value)
                {
                    OnstoreIDChanging(value);
                    ReportPropertyChanging("storeID");
                    _storeID = StructuralObject.SetValidValue(value, "storeID");
                    ReportPropertyChanged("storeID");
                    OnstoreIDChanged();
                }
            }
        }
        private global::System.Int32 _storeID;
        partial void OnstoreIDChanging(global::System.Int32 value);
        partial void OnstoreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberEmployees
        {
            get
            {
                return _NumberEmployees;
            }
            set
            {
                OnNumberEmployeesChanging(value);
                ReportPropertyChanging("NumberEmployees");
                _NumberEmployees = StructuralObject.SetValidValue(value, "NumberEmployees");
                ReportPropertyChanged("NumberEmployees");
                OnNumberEmployeesChanged();
            }
        }
        private global::System.Int32 _NumberEmployees;
        partial void OnNumberEmployeesChanging(global::System.Int32 value);
        partial void OnNumberEmployeesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NodeOrders500Model1", "FK_Orders_StoreTable", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("NodeOrders500Model1.FK_Orders_StoreTable", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("NodeOrders500Model1.FK_Orders_StoreTable", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NodeOrders500Model1", "FK_SalesPersonTable_StoreTable", "SalesPersonTable")]
        public EntityCollection<SalesPersonTable> SalesPersonTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesPersonTable>("NodeOrders500Model1.FK_SalesPersonTable_StoreTable", "SalesPersonTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesPersonTable>("NodeOrders500Model1.FK_SalesPersonTable_StoreTable", "SalesPersonTable", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
